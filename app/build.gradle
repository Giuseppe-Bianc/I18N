/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
//sourceSets {
//    main {
//        resources {
//            srcDir '.\\app\\resources'
//            include '**/*.txt'
//        }
//    }
//}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.30'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.11'
    runtimeOnly 'ch.qos.logback:logback-core:1.2.11'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'it.unibas.i18n.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task run1(type: JavaExec) {
    mainClass = 'it.unibas.i18n.App'
    classpath = sourceSets.main.runtimeClasspath
    args = ['resources/testo.txt']
}

task run2(type: JavaExec){
    mainClass = 'it.unibas.i18n.App'
    classpath = sourceSets.main.runtimeClasspath
    args = ['resources/testo1.txt']
}

task runAll() {
    dependsOn 'run1', 'run2'
}